(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{wXKD:function(e,o,t){"use strict";t.r(o),t.d(o,"_frontmatter",(function(){return s})),t.d(o,"default",(function(){return m}));var n=t("Fcif"),a=t("+I+c"),r=(t("mXGw"),t("/FXl")),p=t("TjRS"),l=t("KUxS"),i=t("yYOO"),c=(t("aD51"),["components"]),s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!Object.prototype.hasOwnProperty.call(s,"__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/providers/google.mdx"}});var d={_frontmatter:s},b=p.a;function m(e){var o,t=e.components,m=Object(a.a)(e,c);return Object(r.b)(b,Object(n.a)({},d,m,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"google-provider"},"Google Provider"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"note"),": Google services require an API key. ",Object(r.b)("a",{parentName:"p",href:"https://developers.google.com/maps/documentation/javascript/get-api-key"},"Obtain here"),".\nFor more options and configurations, see the ",Object(r.b)("a",{parentName:"p",href:"https://developers.google.com/maps/documentation/geocoding/start"},"Google Maps developer docs"),"."),Object(r.b)(l.a,{__position:0,__code:'<Map provider="Google" />',__scope:(o={props:m,DefaultLayout:p.a,Playground:l.a,Map:i.a},o.DefaultLayout=p.a,o._frontmatter=s,o),mdxType:"Playground"},Object(r.b)(i.a,{provider:"Google",mdxType:"Map"})),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"import { GoogleProvider } from 'leaflet-geosearch';\n\nconst provider = new GoogleProvider({\n  params: {\n    key: '__YOUR_GOOGLE_KEY__',\n  },\n});\n\n// add to leaflet\nimport { GeoSearchControl } from 'leaflet-geosearch';\n\nmap.addControl(\n  new GeoSearchControl({\n    provider,\n    style: 'bar',\n  }),\n);\n")),Object(r.b)("h2",{id:"optional-parameters"},"Optional parameters"),Object(r.b)("p",null,"Google supports a number of ",Object(r.b)("a",{parentName:"p",href:"https://developers.google.com/maps/documentation/geocoding/intro#geocoding"},"optional parameters"),". As Google requires those parameters to be added to the url, they can be added to the ",Object(r.b)("inlineCode",{parentName:"p"},"params")," key of the provider."),Object(r.b)("p",null,"All options defined next to the ",Object(r.b)("inlineCode",{parentName:"p"},"params")," key, would have been added to the request body."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"const provider = new GoogleProvider({\n  params: {\n    key: '__YOUR_GOOGLE_KEY__',\n    language: 'nl', // render results in Dutch\n    region: 'nl', // prioritize matches within The Netherlands\n  },\n});\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/providers/google.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-providers-google-mdx-b6cf1bd156f4a9a5bef6.js.map